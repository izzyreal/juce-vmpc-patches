diff --git a/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm b/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm
index 973fad0f0e..bd7b87a259 100644
--- a/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm
+++ b/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm
@@ -833,7 +833,46 @@ void messageCallback() override
             //==============================================================================
             addMethod (@selector (inputBusses),                             [] (id self, SEL)                                                   { return _this (self)->getInputBusses(); });
             addMethod (@selector (outputBusses),                            [] (id self, SEL)                                                   { return _this (self)->getOutputBusses(); });
-            addMethod (@selector (channelCapabilities),                     [] (id self, SEL)                                                   { return _this (self)->getChannelCapabilities(); });
+            addMethod (@selector (channelCapabilities),
+                                                                            [] (id self, SEL)
+                       {
+                /*
+                 * This implementation has been modified by Izmar. It yields the AUv3 equivalent of
+                 https://github.com/izzyreal/juce-vmpc-patches/blob/main/auv2_aumu_default_bus_layout_in_order_to_support_mixed_mono_and_stereo_outputs.patch
+                 * Also see https://github.com/juce-framework/JUCE/issues/1508
+                 *
+                 * To summarize, when VMPC2000XL runs as a music device (instrument), we don't explicitly publish
+                 * supported channel capabilities, which is accomplished by returning `AUAudioUnit`'s default
+                 * implementation.
+                 *
+                 * This results in auval reporting there's only a default implicit layout, and that happens to be
+                 * one that we're very interested in: 1x stereo in, 5x stereo out, and 8x mono out. Logic correctly
+                 * picks up on this layout, and also adds a 1x stereo in, 1x stereo out layout, which is also a good
+                 * option to have as a user.
+                 *
+                 * If we don't return the default implementation for instruments, Logic is not able to detect and
+                 * expose an instrument with a mix of stereo and mono buses. It even starts reporting an unsupported
+                 * and rather strange layout: 13x stereo out, which is far over the 18 mono channels that the
+                 * plugin's buses amount to.
+                 *
+                 * Moreover, we leave the effect implementation as is, because auval starts failing if no explicit
+                 * layouts are provided for effects with 1x stereo in, 5x stereo out and 8x mono out buses. The
+                 * default JUCE implementation of returning `_this(self)->getChannelCapabilities()` happens to
+                 * accomplish a sane layout for effects, even if we advertise so many buses: 1x stereo in, 1x stereo
+                 * out.
+                 */
+                const OSType componentType = [self componentDescription].componentType;
+                const bool isMusicDevice = (componentType == kAudioUnitType_MusicDevice);
+
+                if (isMusicDevice)
+                {
+                    using SuperMethod = NSArray<NSNumber*>* (*)(id, SEL);
+                    SuperMethod superMethod = (SuperMethod) class_getMethodImplementation([AUAudioUnit class], @selector(channelCapabilities));
+                    return superMethod(self, @selector(channelCapabilities));
+                }
+
+                return _this(self)->getChannelCapabilities();
+            });
             addMethod (@selector (shouldChangeToFormat:forBus:),            [] (id self, SEL, AVAudioFormat* format, AUAudioUnitBus* bus)       { return _this (self)->shouldChangeToFormat (format, bus) ? YES : NO; });
 
             //==============================================================================
