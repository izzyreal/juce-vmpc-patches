diff --git a/modules/juce_audio_plugin_client/juce_audio_plugin_client_AU_1.mm b/modules/juce_audio_plugin_client/juce_audio_plugin_client_AU_1.mm
index 9f5c44c789..144a6632c2 100644
--- a/modules/juce_audio_plugin_client/juce_audio_plugin_client_AU_1.mm
+++ b/modules/juce_audio_plugin_client/juce_audio_plugin_client_AU_1.mm
@@ -116,8 +116,31 @@ public:
                            (UInt32) AudioUnitHelpers::getBusCountForWrapper (*juceFilter, true),
                            (UInt32) AudioUnitHelpers::getBusCountForWrapper (*juceFilter, false))
     {
-        inParameterChangedCallback = false;
+        std::function<std::string()> auComponentTypeFn = [component] {
+            const AudioComponent audioComponent = AudioComponentInstanceGetComponent(component);
+            AudioComponentDescription desc;
+            const OSStatus result = AudioComponentGetDescription(audioComponent, &desc);
+            
+            if (result == noErr)
+            {
+                const auto componentType = desc.componentType;
+                return std::string {
+                    static_cast<char>((componentType >> 24) & 0xFF),
+                    static_cast<char>((componentType >> 16) & 0xFF),
+                    static_cast<char>((componentType >> 8) & 0xFF),
+                    static_cast<char>(componentType & 0xFF)
+                };
+            }
+            else
+            {
+                return std::string("");
+            }
+        };
+        
+        juceFilter->auComponentType = auComponentTypeFn;
 
+        inParameterChangedCallback = false;
+                
        #ifdef JucePlugin_PreferredChannelConfigurations
         short configs[][2] = {JucePlugin_PreferredChannelConfigurations};
         const int numConfigs = sizeof (configs) / sizeof (short[2]);
diff --git a/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm b/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm
index 0ec50977f5..cd08176204 100644
--- a/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm
+++ b/modules/juce_audio_plugin_client/juce_audio_plugin_client_AUv3.mm
@@ -120,6 +120,17 @@ public:
         JUCE_END_IGNORE_WARNINGS_GCC_LIKE
           processorHolder (processor)
     {
+        std::function<std::string()> auComponentTypeFn = [this] {
+            const OSType componentType = getAudioUnit().componentDescription.componentType;
+            return std::string {
+                static_cast<char>((componentType >> 24) & 0xFF),
+                static_cast<char>((componentType >> 16) & 0xFF),
+                static_cast<char>((componentType >> 8) & 0xFF),
+                static_cast<char>(componentType & 0xFF)
+            };
+        };
+        
+        processor->get()->auComponentType = auComponentTypeFn;
         init();
     }
 
diff --git a/modules/juce_audio_processors/processors/juce_AudioProcessor.h b/modules/juce_audio_processors/processors/juce_AudioProcessor.h
index aa9995c2e4..bc5774fa7e 100644
--- a/modules/juce_audio_processors/processors/juce_AudioProcessor.h
+++ b/modules/juce_audio_processors/processors/juce_AudioProcessor.h
@@ -73,6 +73,8 @@ protected:
     }
 
 public:
+    std::function<std::string()> auComponentType = []{ return ""; };
+
     //==============================================================================
     enum ProcessingPrecision
     {
